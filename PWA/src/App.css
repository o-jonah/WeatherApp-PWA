import React, { useEffect, useState } from "react";
import AssetRow from "./AssetRow";

const AssetTable = () => {
  const [assets, setAssets] = useState([]);
  const [filteredAssets, setFilteredAssets] = useState([]);
  const [loading, setLoading] = useState(true);
  const [searchName, setSearchName] = useState("");
  const [yearFilter, setYearFilter] = useState("All");

  // Replace this with your actual backend URL or .env
  const API_URL = "http://localhost:5000/api/assets";

  useEffect(() => {
    const fetchAssets = async () => {
      try {
        setLoading(true);
        const response = await fetch(API_URL);
        const result = await response.json();
        setAssets(result.data);
        setFilteredAssets(result.data);
        setLoading(false);
      } catch (error) {
        console.error("Failed to fetch data:", error);
        setLoading(false);
      }
    };

    fetchAssets();
  }, []);

  // üîç Filter Handler
  useEffect(() => {
    let filtered = assets;

    if (searchName.trim() !== "") {
      filtered = filtered.filter((asset) =>
        asset.asset_name.toLowerCase().includes(searchName.toLowerCase())
      );
    }

    if (yearFilter !== "All") {
      filtered = filtered.filter((asset) =>
        asset.acquisition_date.startsWith(yearFilter)
      );
    }

    setFilteredAssets(filtered);
  }, [searchName, yearFilter, assets]);

  // üóì Extract distinct years for dropdown
  const acquisitionYears = Array.from(
    new Set(assets.map((a) => a.acquisition_date.slice(0, 4)))
  );

  return (
    <div style={{ padding: "1rem" }}>
      <h2>Asset Depreciation Table</h2>

      {/* üîç Filters */}
      <div style={{ marginBottom: "1rem", display: "flex", gap: "1rem" }}>
        <input
          type="text"
          placeholder="Search by asset name"
          value={searchName}
          onChange={(e) => setSearchName(e.target.value)}
        />
        <select value={yearFilter} onChange={(e) => setYearFilter(e.target.value)}>
          <option value="All">All Years</option>
          {acquisitionYears.map((year) => (
            <option key={year} value={year}>
              {year}
            </option>
          ))}
        </select>
      </div>

      {/* ‚è≥ Loading Message */}
      {loading ? (
        <p style={{ fontWeight: "bold" }}>Loading assets...</p>
      ) : filteredAssets.length === 0 ? (
        <p>No assets found matching filters.</p>
      ) : (
        <table border="1" cellPadding="5" cellSpacing="0" style={{ width: "100%" }}>
          <thead>
            <tr>
              <th>Asset ID</th>
              <th>Asset Name</th>
              <th>Acquisition Date</th>
              <th>Acquisition Cost</th>
              <th>Useful Life</th>
              <th>Residual Value</th>
              <th>Depreciation Method</th>
              <th>Accumulated Depreciation</th>
              <th>Current Value</th>
              <th>Schedule</th>
            </tr>
          </thead>
          <tbody>
            {filteredAssets.map((asset) => (
              <AssetRow key={asset.asset_id} asset={asset} />
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
};

export default AssetTable;
        
